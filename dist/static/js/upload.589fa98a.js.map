{"version":3,"sources":["webpack:///../../../src/components/VTextField/index.ts","webpack:///./src/views/Upload.vue?6e9e","webpack:///src/views/Upload.vue","webpack:///./src/views/Upload.vue?233b","webpack:///../../../src/components/VFileInput/VFileInput.ts","webpack:///./src/views/Upload.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","model","value","callback","$$v","file","expression","loading","on","$event","submitFile","_s","response","staticRenderFns","data","methods","formData","append","VTextField","name","prop","event","props","chips","clearable","type","default","counterSizeString","counterString","placeholder","prependIcon","readonly","showSize","Boolean","validator","v","includes","smallChips","truncateLength","Number","val","computed","classes","computedCounterValue","fileCount","isMultiple","lazyValue","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","base","internalValue","get","set","isDirty","length","isLabelActive","$attrs","hasOwnProperty","text","map","truncatedText","hasChips","watch","handler","console","immediate","$refs","input","clearableCallback","genChips","small","genInput","genPrependSlot","icon","genIcon","genSlot","genSelectionText","genSelections","children","$scopedSlots","index","class","selection","genTextFieldSlot","node","click","onInput","files","e","onKeyDown","truncateText","str","charsKeepOneSide","Math","component","VBtn","VCol","VContainer","VFileInput","VRow"],"mappings":"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","file":"js/upload.589fa98a.js","sourcesContent":["import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-row',{staticClass:\"text-center\"},[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('h1',[_vm._v(\"Upload CSV\")]),_c('v-file-input',{attrs:{\"accept\":\".csv\",\"label\":\"File input\"},model:{value:(_vm.file),callback:function ($$v) {_vm.file=$$v},expression:\"file\"}}),_c('v-btn',{attrs:{\"block\":\"\",\"color\":\"primary\",\"loading\":_vm.loading},on:{\"click\":function($event){return _vm.submitFile()}}},[_vm._v(\"Submit\")]),_c('blockquote',{staticClass:\"blockquote\"},[_vm._v(_vm._s(_vm.response))])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container>\n    <v-row class=\"text-center\">\n      <v-col cols=\"12\">\n        <h1>Upload CSV</h1>\n        <v-file-input accept=\".csv\" label=\"File input\" v-model=\"file\"></v-file-input>\n        <v-btn block color=\"primary\" v-on:click=\"submitFile()\" :loading=\"loading\">Submit</v-btn>\n        <blockquote class=\"blockquote\">{{ response }}</blockquote>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      file: null,\n      loading: false,\n      response: \"\"\n    };\n  },\n\n  methods: {\n    submitFile() {\n      if (this.file != null) {\n        this.loading = true;\n        let formData = new FormData();\n        formData.append(\"file\", this.file);\n        axios\n          .post(\"http://127.0.0.1:5000/users/upload\", formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          })\n          .then(response => {\n            this.response = response.data.results;\n            this.file = null;\n            this.loading = false\n          })\n          .catch(error => {\n            this.response =\n              \"Error code \" +\n              error.response.status +\n              \": \" +\n              error.response.data.results;\n            this.file = null;\n            this.loading = false\n          });\n      }\n    }\n  }\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Upload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Upload.vue?vue&type=script&lang=js&\"","// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.isMultiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    isMultiple (): boolean {\n      return this.$attrs.hasOwnProperty('multiple')\n    },\n    text (): string[] {\n      if (!this.isDirty) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.isMultiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.isMultiple ? [] : undefined\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.isMultiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./Upload.vue?vue&type=template&id=90fc0d8c&\"\nimport script from \"./Upload.vue?vue&type=script&lang=js&\"\nexport * from \"./Upload.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VFileInput } from 'vuetify/lib/components/VFileInput';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCol,VContainer,VFileInput,VRow})\n"],"sourceRoot":""}